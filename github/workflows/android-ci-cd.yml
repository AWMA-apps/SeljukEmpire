name: Android CI/CD (Kotlin + FTL + Play)

on:
  push:
    branches: [ "master" ]     # عدّلها حسب فرعك
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  MODULE: app                                       # غيّرها إذا اسم الموديول مختلف
  PACKAGE_NAME: com.awma.seljukempire                   # ضع الـ applicationId الحقيقي
  JAVA_VERSION: "11"
  BUILD_TOOLS_VERSION: "36.0.0"                     # اختياري: يضمن توافق أدوات البناء

jobs:
  ci:
    name: Build, Lint, Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      # (اختياري) إعداد keystore للتواقيع - مطلوب إذا تبغى تبني AAB موقّع
      - name: Decode Android keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > $HOME/upload.keystore

      - name: Configure signing in gradle.properties
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          cat >> ~/.gradle/gradle.properties << 'EOF'
          MYAPP_STORE_FILE=${HOME}/upload.keystore
          MYAPP_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF

      # بناء Debug + Lint + Unit Tests
      - name: Build Debug
        run: ./gradlew :${{ env.MODULE }}:assembleDebug

      - name: Run Lint
        run: ./gradlew :${{ env.MODULE }}:lintDebug

      - name: Run Unit Tests
        run: ./gradlew :${{ env.MODULE }}:testDebugUnitTest

      # (اختياري) بناء AAB موقّع لإعادة استخدامه في Job النشر
      - name: Build Release AAB
        run: ./gradlew :${{ env.MODULE }}:bundleRelease

      # ارفع المخرجات كـ artifacts
      - name: Upload Lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: ${{ env.MODULE }}/build/reports/lint-*

      - name: Upload Unit Test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-reports
          path: ${{ env.MODULE }}/build/test-results/**

      - name: Upload Debug APK & Release AAB
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            ${{ env.MODULE }}/build/outputs/apk/debug/*.apk
            ${{ env.MODULE }}/build/outputs/bundle/release/*.aab

  testlab:
    name: Firebase Test Lab (Instrumented)
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      # نبني APK التطبيق و APK الاختبارات المدمجة
      - name: Assemble App & AndroidTest APKs
        run: |
          ./gradlew :${{ env.MODULE }}:assembleDebug
          ./gradlew :${{ env.MODULE }}:assembleAndroidTest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FTL_SERVICE_ACCOUNT_JSON }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      # شغّل الاختبارات على أجهزة متعددة في FTL
      - name: Run Instrumentation tests on FTL
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app ${{ env.MODULE }}/build/outputs/apk/debug/${{ env.MODULE }}-debug.apk \
            --test ${{ env.MODULE }}/build/outputs/apk/androidTest/debug/${{ env.MODULE }}-debug-androidTest.apk \
            --device model=Pixel6,version=34,locale=en,orientation=portrait \
            --device model=Pixel4,version=30,locale=en,orientation=portrait \
            --timeout 15m \
            --results-bucket=${{ secrets.FTL_RESULTS_BUCKET }} \
            --results-dir=github/${{ github.repository }}/$GITHUB_RUN_NUMBER

  deploy:
    name: Upload to Google Play (internal)
    runs-on: ubuntu-latest
    needs: [ci, testlab]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3

      # نضمن وجود ملف الـ AAB
      - name: Build Release AAB (fallback)
        run: ./gradlew :${{ env.MODULE }}:bundleRelease

      - name: Upload to Play Console (internal track)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ env.PACKAGE_NAME }}
          releaseFiles: |
            ${{ env.MODULE }}/build/outputs/bundle/release/*.aab
          track: internal
          status: draft
          inAppUpdatePriority: 2
          whatsNewDirectory: fastlane/metadata/android
